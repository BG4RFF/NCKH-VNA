<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\VNA_TM4C1294XL.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\VNA_TM4C1294XL.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Mon Dec 04 12:15:31 2017
<BR><P>
<H3>Maximum Stack Usage =        280 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
UART_Received_CallBack &rArr; JSONObject_Getdouble &rArr; __hardfp_atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[a]">GPIOA_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">GPIOA_Handler</a><BR>
 <LI><a href="#[b]">GPIOB_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">GPIOB_Handler</a><BR>
 <LI><a href="#[c]">GPIOC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">GPIOC_Handler</a><BR>
 <LI><a href="#[d]">GPIOD_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">GPIOD_Handler</a><BR>
 <LI><a href="#[e]">GPIOE_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">GPIOE_Handler</a><BR>
 <LI><a href="#[f]">UART0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">UART0_Handler</a><BR>
 <LI><a href="#[10]">UART1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">UART1_Handler</a><BR>
 <LI><a href="#[11]">SSI0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">SSI0_Handler</a><BR>
 <LI><a href="#[12]">I2C0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">I2C0_Handler</a><BR>
 <LI><a href="#[13]">PMW0_FAULT_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">PMW0_FAULT_Handler</a><BR>
 <LI><a href="#[14]">PWM0_0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">PWM0_0_Handler</a><BR>
 <LI><a href="#[15]">PWM0_1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">PWM0_1_Handler</a><BR>
 <LI><a href="#[16]">PWM0_2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">PWM0_2_Handler</a><BR>
 <LI><a href="#[17]">QEI0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">QEI0_Handler</a><BR>
 <LI><a href="#[18]">ADC0SS0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">ADC0SS0_Handler</a><BR>
 <LI><a href="#[19]">ADC0SS1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">ADC0SS1_Handler</a><BR>
 <LI><a href="#[1a]">ADC0SS2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">ADC0SS2_Handler</a><BR>
 <LI><a href="#[1b]">ADC0SS3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">ADC0SS3_Handler</a><BR>
 <LI><a href="#[1c]">WDT0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">WDT0_Handler</a><BR>
 <LI><a href="#[1d]">TIMER0A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">TIMER0A_Handler</a><BR>
 <LI><a href="#[1e]">TIMER0B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">TIMER0B_Handler</a><BR>
 <LI><a href="#[1f]">TIMER1A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">TIMER1A_Handler</a><BR>
 <LI><a href="#[20]">TIMER1B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">TIMER1B_Handler</a><BR>
 <LI><a href="#[21]">TIMER2A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">TIMER2A_Handler</a><BR>
 <LI><a href="#[22]">TIMER2B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">TIMER2B_Handler</a><BR>
 <LI><a href="#[23]">COMP0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">COMP0_Handler</a><BR>
 <LI><a href="#[24]">COMP1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">COMP1_Handler</a><BR>
 <LI><a href="#[25]">COMP2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">COMP2_Handler</a><BR>
 <LI><a href="#[26]">SYSCTL_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">SYSCTL_Handler</a><BR>
 <LI><a href="#[27]">FLASH_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">FLASH_Handler</a><BR>
 <LI><a href="#[28]">GPIOF_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">GPIOF_Handler</a><BR>
 <LI><a href="#[29]">GPIOG_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[29]">GPIOG_Handler</a><BR>
 <LI><a href="#[2a]">GPIOH_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a]">GPIOH_Handler</a><BR>
 <LI><a href="#[2b]">UART2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b]">UART2_Handler</a><BR>
 <LI><a href="#[2c]">SSI1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">SSI1_Handler</a><BR>
 <LI><a href="#[2d]">TIMER3A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2d]">TIMER3A_Handler</a><BR>
 <LI><a href="#[2e]">TIMER3B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e]">TIMER3B_Handler</a><BR>
 <LI><a href="#[2f]">I2C1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f]">I2C1_Handler</a><BR>
 <LI><a href="#[30]">CAN0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[30]">CAN0_Handler</a><BR>
 <LI><a href="#[31]">CAN1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[31]">CAN1_Handler</a><BR>
 <LI><a href="#[32]">ETH_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[32]">ETH_Handler</a><BR>
 <LI><a href="#[33]">HIB_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[33]">HIB_Handler</a><BR>
 <LI><a href="#[34]">USB0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[34]">USB0_Handler</a><BR>
 <LI><a href="#[35]">PWM0_3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[35]">PWM0_3_Handler</a><BR>
 <LI><a href="#[36]">UDMA_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[36]">UDMA_Handler</a><BR>
 <LI><a href="#[37]">UDMAERR_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[37]">UDMAERR_Handler</a><BR>
 <LI><a href="#[38]">ADC1SS0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[38]">ADC1SS0_Handler</a><BR>
 <LI><a href="#[39]">ADC1SS1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[39]">ADC1SS1_Handler</a><BR>
 <LI><a href="#[3a]">ADC1SS2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3a]">ADC1SS2_Handler</a><BR>
 <LI><a href="#[3b]">ADC1SS3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b]">ADC1SS3_Handler</a><BR>
 <LI><a href="#[3c]">EBI0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3c]">EBI0_Handler</a><BR>
 <LI><a href="#[3d]">GPIOJ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3d]">GPIOJ_Handler</a><BR>
 <LI><a href="#[3e]">GPIOK_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3e]">GPIOK_Handler</a><BR>
 <LI><a href="#[3f]">GPIOL_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3f]">GPIOL_Handler</a><BR>
 <LI><a href="#[40]">SSI2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[40]">SSI2_Handler</a><BR>
 <LI><a href="#[41]">SSI3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[41]">SSI3_Handler</a><BR>
 <LI><a href="#[42]">UART3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[42]">UART3_Handler</a><BR>
 <LI><a href="#[43]">UART4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[43]">UART4_Handler</a><BR>
 <LI><a href="#[44]">UART5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[44]">UART5_Handler</a><BR>
 <LI><a href="#[45]">UART6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[45]">UART6_Handler</a><BR>
 <LI><a href="#[46]">UART7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[46]">UART7_Handler</a><BR>
 <LI><a href="#[47]">I2C2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[47]">I2C2_Handler</a><BR>
 <LI><a href="#[48]">I2C3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[48]">I2C3_Handler</a><BR>
 <LI><a href="#[49]">TIMER4A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[49]">TIMER4A_Handler</a><BR>
 <LI><a href="#[4a]">TIMER4B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4a]">TIMER4B_Handler</a><BR>
 <LI><a href="#[4b]">TIMER5A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4b]">TIMER5A_Handler</a><BR>
 <LI><a href="#[4c]">TIMER5B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4c]">TIMER5B_Handler</a><BR>
 <LI><a href="#[4d]">FPU_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4d]">FPU_Handler</a><BR>
 <LI><a href="#[4e]">I2C4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4e]">I2C4_Handler</a><BR>
 <LI><a href="#[4f]">I2C5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4f]">I2C5_Handler</a><BR>
 <LI><a href="#[50]">GPIOM_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[50]">GPIOM_Handler</a><BR>
 <LI><a href="#[51]">GPION_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[51]">GPION_Handler</a><BR>
 <LI><a href="#[52]">TAMPER_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[52]">TAMPER_Handler</a><BR>
 <LI><a href="#[53]">GPIOP0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[53]">GPIOP0_Handler</a><BR>
 <LI><a href="#[54]">GPIOP1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[54]">GPIOP1_Handler</a><BR>
 <LI><a href="#[55]">GPIOP2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[55]">GPIOP2_Handler</a><BR>
 <LI><a href="#[56]">GPIOP3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[56]">GPIOP3_Handler</a><BR>
 <LI><a href="#[57]">GPIOP4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[57]">GPIOP4_Handler</a><BR>
 <LI><a href="#[58]">GPIOP5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[58]">GPIOP5_Handler</a><BR>
 <LI><a href="#[59]">GPIOP6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[59]">GPIOP6_Handler</a><BR>
 <LI><a href="#[5a]">GPIOP7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5a]">GPIOP7_Handler</a><BR>
 <LI><a href="#[5b]">GPIOQ0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5b]">GPIOQ0_Handler</a><BR>
 <LI><a href="#[5c]">GPIOQ1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5c]">GPIOQ1_Handler</a><BR>
 <LI><a href="#[5d]">GPIOQ2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5d]">GPIOQ2_Handler</a><BR>
 <LI><a href="#[5e]">GPIOQ3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5e]">GPIOQ3_Handler</a><BR>
 <LI><a href="#[5f]">GPIOQ4_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5f]">GPIOQ4_Handler</a><BR>
 <LI><a href="#[60]">GPIOQ5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[60]">GPIOQ5_Handler</a><BR>
 <LI><a href="#[61]">GPIOQ6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[61]">GPIOQ6_Handler</a><BR>
 <LI><a href="#[62]">GPIOQ7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[62]">GPIOQ7_Handler</a><BR>
 <LI><a href="#[63]">GPIOR_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[63]">GPIOR_Handler</a><BR>
 <LI><a href="#[64]">GPIOS_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[64]">GPIOS_Handler</a><BR>
 <LI><a href="#[65]">SHAMD5_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[65]">SHAMD5_Handler</a><BR>
 <LI><a href="#[66]">AES_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[66]">AES_Handler</a><BR>
 <LI><a href="#[67]">DES3DES_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[67]">DES3DES_Handler</a><BR>
 <LI><a href="#[68]">LCDCONTROLLER_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[68]">LCDCONTROLLER_Handler</a><BR>
 <LI><a href="#[69]">TIMER6A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[69]">TIMER6A_Handler</a><BR>
 <LI><a href="#[6a]">TIMER6B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6a]">TIMER6B_Handler</a><BR>
 <LI><a href="#[6b]">TIMER7A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6b]">TIMER7A_Handler</a><BR>
 <LI><a href="#[6c]">TIMER7B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6c]">TIMER7B_Handler</a><BR>
 <LI><a href="#[6d]">I2C6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6d]">I2C6_Handler</a><BR>
 <LI><a href="#[6e]">I2C7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6e]">I2C7_Handler</a><BR>
 <LI><a href="#[6f]">HIMSCANKEYBOARD_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6f]">HIMSCANKEYBOARD_Handler</a><BR>
 <LI><a href="#[70]">ONEWIRE_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[70]">ONEWIRE_Handler</a><BR>
 <LI><a href="#[71]">HIMPS2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[71]">HIMPS2_Handler</a><BR>
 <LI><a href="#[72]">HIMLEDSEQUENCER_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[72]">HIMLEDSEQUENCER_Handler</a><BR>
 <LI><a href="#[73]">HIMCONSUMERIR_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[73]">HIMCONSUMERIR_Handler</a><BR>
 <LI><a href="#[74]">I2C8_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[74]">I2C8_Handler</a><BR>
 <LI><a href="#[75]">I2C9_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[75]">I2C9_Handler</a><BR>
 <LI><a href="#[76]">GPIOT_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[76]">GPIOT_Handler</a><BR>
 <LI><a href="#[114]">UARTCharPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[114]">UARTCharPut</a><BR>
 <LI><a href="#[113]">UARTCharGet</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[113]">UARTCharGet</a><BR>
 <LI><a href="#[115]">UARTConfigSetExpClk</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[115]">UARTConfigSetExpClk</a><BR>
 <LI><a href="#[88]">WTIMER0A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[88]">WTIMER0A_Handler</a><BR>
 <LI><a href="#[89]">WTIMER0B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[89]">WTIMER0B_Handler</a><BR>
 <LI><a href="#[8a]">WTIMER1A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8a]">WTIMER1A_Handler</a><BR>
 <LI><a href="#[8b]">WTIMER1B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8b]">WTIMER1B_Handler</a><BR>
 <LI><a href="#[8c]">WTIMER2A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8c]">WTIMER2A_Handler</a><BR>
 <LI><a href="#[8d]">WTIMER2B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8d]">WTIMER2B_Handler</a><BR>
 <LI><a href="#[8e]">WTIMER3A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8e]">WTIMER3A_Handler</a><BR>
 <LI><a href="#[8f]">WTIMER3B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8f]">WTIMER3B_Handler</a><BR>
 <LI><a href="#[90]">WTIMER4A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[90]">WTIMER4A_Handler</a><BR>
 <LI><a href="#[91]">WTIMER4B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[91]">WTIMER4B_Handler</a><BR>
 <LI><a href="#[92]">WTIMER5A_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[92]">WTIMER5A_Handler</a><BR>
 <LI><a href="#[93]">WTIMER5B_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[93]">WTIMER5B_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[18]">ADC0SS0_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[19]">ADC0SS1_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[1a]">ADC0SS2_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[1b]">ADC0SS3_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[38]">ADC1SS0_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[39]">ADC1SS1_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[3a]">ADC1SS2_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[3b]">ADC1SS3_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[66]">AES_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[30]">CAN0_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[31]">CAN1_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[23]">COMP0_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[24]">COMP1_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[25]">COMP2_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[67]">DES3DES_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[3c]">EBI0_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[32]">ETH_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[27]">FLASH_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[4d]">FPU_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[83]">FrequencyReceivedCallback</a> from main.o(i.FrequencyReceivedCallback) referenced from main.o(i.PhoneConnectedCallback)
 <LI><a href="#[a]">GPIOA_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[b]">GPIOB_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[c]">GPIOC_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[d]">GPIOD_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[e]">GPIOE_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[28]">GPIOF_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[29]">GPIOG_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[2a]">GPIOH_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[3d]">GPIOJ_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[3e]">GPIOK_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[3f]">GPIOL_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[50]">GPIOM_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[51]">GPION_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[53]">GPIOP0_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[54]">GPIOP1_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[55]">GPIOP2_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[56]">GPIOP3_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[57]">GPIOP4_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[58]">GPIOP5_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[59]">GPIOP6_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[5a]">GPIOP7_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[7d]">GPIOPortLIntHandler</a> from button_control.o(i.GPIOPortLIntHandler) referenced from button_control.o(i.Button_Init)
 <LI><a href="#[5b]">GPIOQ0_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[5c]">GPIOQ1_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[5d]">GPIOQ2_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[5e]">GPIOQ3_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[5f]">GPIOQ4_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[60]">GPIOQ5_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[61]">GPIOQ6_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[62]">GPIOQ7_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[63]">GPIOR_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[64]">GPIOS_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[76]">GPIOT_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[33]">HIB_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[73]">HIMCONSUMERIR_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[72]">HIMLEDSEQUENCER_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[71]">HIMPS2_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[6f]">HIMSCANKEYBOARD_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[12]">I2C0_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[2f]">I2C1_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[47]">I2C2_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[48]">I2C3_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[4e]">I2C4_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[4f]">I2C5_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[6d]">I2C6_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[6e]">I2C7_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[74]">I2C8_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[75]">I2C9_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[68]">LCDCONTROLLER_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[70]">ONEWIRE_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[13]">PMW0_FAULT_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[14]">PWM0_0_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[15]">PWM0_1_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[16]">PWM0_2_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[35]">PWM0_3_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[82]">PhoneConnectedCallback</a> from main.o(i.PhoneConnectedCallback) referenced from main.o(i.LCD_GetFrequency)
 <LI><a href="#[17]">QEI0_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[87]">Reset_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[65]">SHAMD5_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[11]">SSI0_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[2c]">SSI1_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[40]">SSI2_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[41]">SSI3_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[26]">SYSCTL_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[86]">SysTickIntHandler</a> from delay.o(i.SysTickIntHandler) referenced from delay.o(i.delay_Init)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[78]">SystemInit</a> from system_tm4c129.o(i.SystemInit) referenced from startup_tm4c129.o(.text)
 <LI><a href="#[52]">TAMPER_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[1d]">TIMER0A_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[1e]">TIMER0B_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[1f]">TIMER1A_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[20]">TIMER1B_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[21]">TIMER2A_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[22]">TIMER2B_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[2d]">TIMER3A_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[2e]">TIMER3B_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[49]">TIMER4A_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[4a]">TIMER4B_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[4b]">TIMER5A_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[4c]">TIMER5B_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[69]">TIMER6A_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[6a]">TIMER6B_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[6b]">TIMER7A_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[6c]">TIMER7B_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[f]">UART0_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[10]">UART1_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[2b]">UART2_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[42]">UART3_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[43]">UART4_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[44]">UART5_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[45]">UART6_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[46]">UART7_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[84]">UART_Handler</a> from uart_driver.o(i.UART_Handler) referenced from uart_driver.o(i.UART_Init)
 <LI><a href="#[81]">UART_Received_CallBack</a> from hc05_driver.o(i.UART_Received_CallBack) referenced from hc05_driver.o(i.HC05_Init)
 <LI><a href="#[37]">UDMAERR_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[36]">UDMA_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[34]">USB0_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[1c]">WDT0_Handler</a> from startup_tm4c129.o(.text) referenced from startup_tm4c129.o(RESET)
 <LI><a href="#[79]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_tm4c129.o(.text)
 <LI><a href="#[7b]">_sbackspace</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[7a]">_sgetc</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[85]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[7e]">btn0UpdateFlag</a> from button_control.o(i.btn0UpdateFlag) referenced from button_control.o(i.Button_SetBtn0Flag)
 <LI><a href="#[7f]">btn1UpdateFlag</a> from button_control.o(i.btn1UpdateFlag) referenced from button_control.o(i.Button_SetBtn1Flag)
 <LI><a href="#[80]">btn2UpdateFlag</a> from button_control.o(i.btn2UpdateFlag) referenced from button_control.o(i.Button_SetBtn2Flag)
 <LI><a href="#[7c]">isspace</a> from isspace_o.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[77]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[79]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(.text)
</UL>
<P><STRONG><a name="[133]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[94]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[ad]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[134]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[135]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[136]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[137]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[138]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[139]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[13a]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[ec]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[13b]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[13c]"></a>CPUbasepriSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[13d]"></a>CPUbasepriGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[87]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>GPIOA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>GPIOB_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOB_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>GPIOC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>GPIOD_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOD_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOD_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>GPIOE_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOE_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOE_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>UART0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>UART1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SSI0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSI0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSI0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>I2C0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PMW0_FAULT_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMW0_FAULT_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PMW0_FAULT_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>PWM0_0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0_0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0_0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PWM0_1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0_1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0_1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>PWM0_2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0_2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0_2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>QEI0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QEI0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>ADC0SS0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0SS0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0SS0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>ADC0SS1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0SS1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0SS1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>ADC0SS2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0SS2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0SS2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>ADC0SS3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0SS3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0SS3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>WDT0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIMER0A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIMER0B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIMER1A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIMER1B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIMER2A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIMER2B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>COMP0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>COMP1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>COMP2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SYSCTL_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTL_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTL_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>FLASH_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>GPIOF_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOF_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOF_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>GPIOG_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOG_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOG_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>GPIOH_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOH_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOH_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>UART2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>SSI1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSI1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSI1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIMER3A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TIMER3B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CAN0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>CAN1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>ETH_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ETH_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>HIB_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIB_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIB_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USB0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>PWM0_3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0_3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0_3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>UDMA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDMA_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDMA_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>UDMAERR_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDMAERR_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UDMAERR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>ADC1SS0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1SS0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1SS0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC1SS1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1SS1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1SS1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>ADC1SS2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1SS2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1SS2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>ADC1SS3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1SS3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1SS3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>EBI0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EBI0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EBI0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>GPIOJ_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOJ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOJ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>GPIOK_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOK_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOK_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>GPIOL_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOL_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOL_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SSI2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSI2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSI2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SSI3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSI3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSI3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>UART3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>UART4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>UART5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>UART6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>UART7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>I2C2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>I2C3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TIMER4A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER4A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER4A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TIMER4B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER4B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER4B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TIMER5A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER5A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER5A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIMER5B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER5B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER5B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>WTIMER0A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER0A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER0A_Handler
</UL>

<P><STRONG><a name="[89]"></a>WTIMER0B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER0B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER0B_Handler
</UL>

<P><STRONG><a name="[8a]"></a>WTIMER1A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER1A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER1A_Handler
</UL>

<P><STRONG><a name="[8b]"></a>WTIMER1B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER1B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER1B_Handler
</UL>

<P><STRONG><a name="[8c]"></a>WTIMER2A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER2A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER2A_Handler
</UL>

<P><STRONG><a name="[8d]"></a>WTIMER2B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER2B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER2B_Handler
</UL>

<P><STRONG><a name="[8e]"></a>WTIMER3A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER3A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER3A_Handler
</UL>

<P><STRONG><a name="[8f]"></a>WTIMER3B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER3B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER3B_Handler
</UL>

<P><STRONG><a name="[90]"></a>WTIMER4A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER4A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER4A_Handler
</UL>

<P><STRONG><a name="[91]"></a>WTIMER4B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER4B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER4B_Handler
</UL>

<P><STRONG><a name="[92]"></a>WTIMER5A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER5A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER5A_Handler
</UL>

<P><STRONG><a name="[93]"></a>WTIMER5B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER5B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WTIMER5B_Handler
</UL>

<P><STRONG><a name="[4d]"></a>FPU_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPU_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPU_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>I2C4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>I2C5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>GPIOM_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOM_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>GPION_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPION_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPION_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TAMPER_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAMPER_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TAMPER_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>GPIOP0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>GPIOP1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>GPIOP2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>GPIOP3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>GPIOP4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>GPIOP5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>GPIOP6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>GPIOP7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOP7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>GPIOQ0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOQ0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOQ0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>GPIOQ1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOQ1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOQ1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>GPIOQ2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOQ2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOQ2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>GPIOQ3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOQ3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOQ3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>GPIOQ4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOQ4_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOQ4_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>GPIOQ5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOQ5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOQ5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>GPIOQ6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOQ6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOQ6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>GPIOQ7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOQ7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOQ7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>GPIOR_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOR_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>GPIOS_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOS_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOS_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>SHAMD5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHAMD5_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SHAMD5_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>AES_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>DES3DES_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DES3DES_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DES3DES_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>LCDCONTROLLER_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDCONTROLLER_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDCONTROLLER_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>TIMER6A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER6A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER6A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>TIMER6B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER6B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER6B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>TIMER7A_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER7A_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER7A_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>TIMER7B_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER7B_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER7B_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>I2C6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>I2C7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>HIMSCANKEYBOARD_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIMSCANKEYBOARD_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIMSCANKEYBOARD_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>ONEWIRE_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ONEWIRE_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ONEWIRE_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>HIMPS2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIMPS2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIMPS2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>HIMLEDSEQUENCER_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIMLEDSEQUENCER_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIMLEDSEQUENCER_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>HIMCONSUMERIR_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIMCONSUMERIR_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIMCONSUMERIR_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>I2C8_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C8_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C8_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>I2C9_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C9_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C9_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>GPIOT_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_tm4c129.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOT_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOT_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[13e]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[140]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[141]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[f5]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__jsoneq
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSONObject_Parse
</UL>

<P><STRONG><a name="[11e]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Received_CallBack
</UL>

<P><STRONG><a name="[118]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Handler
</UL>

<P><STRONG><a name="[127]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__jsoneq
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[9e]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_SetFrequency
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readMag
</UL>

<P><STRONG><a name="[9f]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readPhs
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
</UL>

<P><STRONG><a name="[a0]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_SetFrequency
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readPhs
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readMag
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[a1]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_SetFrequency
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readPhs
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readMag
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[a2]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_SetFrequency
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetFrequency
</UL>

<P><STRONG><a name="[a3]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_SetFrequency
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readPhs
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readMag
</UL>

<P><STRONG><a name="[a4]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_SetFrequency
</UL>

<P><STRONG><a name="[ca]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_SetFrequency
</UL>

<P><STRONG><a name="[142]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_SetFrequency
</UL>

<P><STRONG><a name="[c7]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_SetFrequency
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[a6]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_SetFrequency
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[143]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[12b]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[144]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[145]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[146]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>__strtod_int</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>

<P><STRONG><a name="[147]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[148]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[9c]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>

<P><STRONG><a name="[ac]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[95]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[149]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[7c]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace_o.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[aa]"></a>_scanf_real</STRONG> (Thumb, 0 bytes, Stack size 104 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>

<P><STRONG><a name="[b1]"></a>_scanf_really_real</STRONG> (Thumb, 556 bytes, Stack size 104 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[7a]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[7b]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[b0]"></a>__aeabi_ul2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[14a]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[14b]"></a>__decompress2</STRONG> (Thumb, 94 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>ADCIntClear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, adc.o(i.ADCIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readPhs
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readMag
</UL>

<P><STRONG><a name="[bc]"></a>ADCIntStatus</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, adc.o(i.ADCIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readPhs
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readMag
</UL>

<P><STRONG><a name="[bb]"></a>ADCProcessorTrigger</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, adc.o(i.ADCProcessorTrigger))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readPhs
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readMag
</UL>

<P><STRONG><a name="[b7]"></a>ADCSequenceConfigure</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, adc.o(i.ADCSequenceConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADCSequenceConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[be]"></a>ADCSequenceDataGet</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, adc.o(i.ADCSequenceDataGet))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readPhs
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readMag
</UL>

<P><STRONG><a name="[b9]"></a>ADCSequenceEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adc.o(i.ADCSequenceEnable))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[b8]"></a>ADCSequenceStepConfigure</STRONG> (Thumb, 154 bytes, Stack size 4 bytes, adc.o(i.ADCSequenceStepConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADCSequenceStepConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[b3]"></a>ADC_init</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, adc_driver.o(i.ADC_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ADC_init &rArr; GPIOPinTypeADC &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeADC
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceStepConfigure
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceEnable
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceConfigure
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralReady
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[ba]"></a>ADC_readMag</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, adc_driver.o(i.ADC_readMag))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ADC_readMag &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceDataGet
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCProcessorTrigger
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCIntStatus
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCIntClear
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowResult
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrequencyReceivedCallback
</UL>

<P><STRONG><a name="[bf]"></a>ADC_readPhs</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, adc_driver.o(i.ADC_readPhs))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ADC_readPhs &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceDataGet
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCProcessorTrigger
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCIntStatus
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCIntClear
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowResult
</UL>

<P><STRONG><a name="[c0]"></a>ADF4350_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, adf4350.o(i.ADF4350_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ADF4350_Init &rArr; SoftwareSPI_Init &rArr; GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareSPI_Init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralReady
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[c6]"></a>ADF4350_SetFrequency</STRONG> (Thumb, 704 bytes, Stack size 72 bytes, adf4350.o(i.ADF4350_SetFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = ADF4350_SetFrequency &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ADF4350_bitWrite
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ADF4350_bitSet
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ADF4350_bitClear
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ADF4350_SetADF
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetFrequency
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrequencyReceivedCallback
</UL>

<P><STRONG><a name="[c4]"></a>ADF4350_reset</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, adf4350.o(i.ADF4350_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADF4350_reset &rArr; __ADF4350_WriteRegister32 &rArr; SoftwareSPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ADF4350_WriteRegister32
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_Init
</UL>

<P><STRONG><a name="[d0]"></a>Button_Init</STRONG> (Thumb, 290 bytes, Stack size 16 bytes, button_control.o(i.Button_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Button_Init &rArr; GPIOPinTypeGPIOInput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntTypeSet
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntRegister
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntEnable
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntDisable
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntClear
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralReady
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[105]"></a>Button_SetBtn0Flag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, button_control.o(i.Button_SetBtn0Flag))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetFrequency
</UL>

<P><STRONG><a name="[106]"></a>Button_SetBtn1Flag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, button_control.o(i.Button_SetBtn1Flag))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetFrequency
</UL>

<P><STRONG><a name="[107]"></a>Button_SetBtn2Flag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, button_control.o(i.Button_SetBtn2Flag))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetFrequency
</UL>

<P><STRONG><a name="[83]"></a>FrequencyReceivedCallback</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, main.o(i.FrequencyReceivedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = FrequencyReceivedCallback &rArr; ADF4350_SetFrequency &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_WriteState
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_write_string
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_set_XY
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_clear
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC05_sendData
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_SetFrequency
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readMag
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.PhoneConnectedCallback)
</UL>
<P><STRONG><a name="[e1]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeADC
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
</UL>

<P><STRONG><a name="[d4]"></a>GPIOIntClear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortLIntHandler
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
</UL>

<P><STRONG><a name="[d3]"></a>GPIOIntDisable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntDisable))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
</UL>

<P><STRONG><a name="[d7]"></a>GPIOIntEnable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
</UL>

<P><STRONG><a name="[d5]"></a>GPIOIntRegister</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gpio.o(i.GPIOIntRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIOIntRegister &rArr; IntRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GPIOIntNumberGet
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntRegister
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
</UL>

<P><STRONG><a name="[e3]"></a>GPIOIntStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPortLIntHandler
</UL>

<P><STRONG><a name="[d6]"></a>GPIOIntTypeSet</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, gpio.o(i.GPIOIntTypeSet))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
</UL>

<P><STRONG><a name="[d2]"></a>GPIOPadConfigSet</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeADC
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
</UL>

<P><STRONG><a name="[e9]"></a>GPIOPinConfigure</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConsole
</UL>

<P><STRONG><a name="[109]"></a>GPIOPinRead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinRead))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetFrequency
</UL>

<P><STRONG><a name="[b6]"></a>GPIOPinTypeADC</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeADC))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIOPinTypeADC &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
</UL>

<P><STRONG><a name="[d1]"></a>GPIOPinTypeGPIOInput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIOPinTypeGPIOInput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[c2]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareSPI_Init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_GPIO_Config
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_Init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[e2]"></a>GPIOPinTypeUART</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIOPinTypeUART &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConsole
</UL>

<P><STRONG><a name="[c3]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareSPI_SendData
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareSPI_Init
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_RST
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_LIGHT
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_DIN
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_DC
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_CLK
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_CE
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_WriteState
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_Init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ADF4350_WriteRegister32
</UL>

<P><STRONG><a name="[7d]"></a>GPIOPortLIntHandler</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, button_control.o(i.GPIOPortLIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIOPortLIntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntStatus
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_control.o(i.Button_Init)
</UL>
<P><STRONG><a name="[e4]"></a>HC05_Init</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, hc05_driver.o(i.HC05_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HC05_Init &rArr; UART_Init &rArr; GPIOPinTypeUART &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[dd]"></a>HC05_sendData</STRONG> (Thumb, 54 bytes, Stack size 104 bytes, hc05_driver.o(i.HC05_sendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HC05_sendData &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendStr
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrequencyReceivedCallback
</UL>

<P><STRONG><a name="[e7]"></a>HC05_sendHello</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hc05_driver.o(i.HC05_sendHello))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HC05_sendHello &rArr; UART_SendStr &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendStr
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneConnectedCallback
</UL>

<P><STRONG><a name="[108]"></a>HC05_setConnectedCallback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hc05_driver.o(i.HC05_setConnectedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneConnectedCallback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetFrequency
</UL>

<P><STRONG><a name="[10d]"></a>HC05_setFrequencyReceivedCallback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hc05_driver.o(i.HC05_setFrequencyReceivedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneConnectedCallback
</UL>

<P><STRONG><a name="[e8]"></a>InitConsole</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, main.o(i.InitConsole))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = InitConsole &rArr; GPIOPinTypeUART &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTStdioConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[e0]"></a>IntEnable</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntRegister
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntRegister
</UL>

<P><STRONG><a name="[eb]"></a>IntMasterEnable</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_Init
</UL>

<P><STRONG><a name="[11c]"></a>IntPrioritySet</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, interrupt.o(i.IntPrioritySet))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[df]"></a>IntRegister</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, interrupt.o(i.IntRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntRegister
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntRegister
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntRegister
</UL>

<P><STRONG><a name="[ed]"></a>JSONObject_CreateObject</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, jsonobject.o(i.JSONObject_CreateObject))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = JSONObject_CreateObject &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jsmn_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Received_CallBack
</UL>

<P><STRONG><a name="[f0]"></a>JSONObject_GetString</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, jsonobject.o(i.JSONObject_GetString))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = JSONObject_GetString &rArr; __jsoneq &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__jsoneq
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Received_CallBack
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSONObject_Getdouble
</UL>

<P><STRONG><a name="[f2]"></a>JSONObject_Getdouble</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, jsonobject.o(i.JSONObject_Getdouble))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = JSONObject_Getdouble &rArr; __hardfp_atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSONObject_GetString
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Received_CallBack
</UL>

<P><STRONG><a name="[f4]"></a>JSONObject_Parse</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, jsonobject.o(i.JSONObject_Parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = JSONObject_Parse &rArr; jsmn_parse &rArr; jsmn_parse_string &rArr; jsmn_alloc_token
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jsmn_parse
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Received_CallBack
</UL>

<P><STRONG><a name="[f7]"></a>LCD5110_CE</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd5110.o(i.LCD5110_CE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD5110_CE
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_LCD_write_byte
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_init
</UL>

<P><STRONG><a name="[f8]"></a>LCD5110_CLK</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd5110.o(i.LCD5110_CLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD5110_CLK
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_LCD_write_byte
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_init
</UL>

<P><STRONG><a name="[f9]"></a>LCD5110_DC</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd5110.o(i.LCD5110_DC))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD5110_DC
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_LCD_write_byte
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_init
</UL>

<P><STRONG><a name="[fa]"></a>LCD5110_DIN</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd5110.o(i.LCD5110_DIN))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD5110_DIN
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_LCD_write_byte
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_init
</UL>

<P><STRONG><a name="[fb]"></a>LCD5110_GPIO_Config</STRONG> (Thumb, 182 bytes, Stack size 8 bytes, lcd5110.o(i.LCD5110_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD5110_GPIO_Config &rArr; GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralReady
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_init
</UL>

<P><STRONG><a name="[fc]"></a>LCD5110_LCD_delay_ms</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lcd5110.o(i.LCD5110_LCD_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD5110_LCD_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_init
</UL>

<P><STRONG><a name="[fd]"></a>LCD5110_LCD_write_byte</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, lcd5110.o(i.LCD5110_LCD_write_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD5110_LCD_write_byte &rArr; LCD5110_DIN
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_DIN
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_DC
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_CLK
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_CE
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_write_char
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_set_XY
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_clear
</UL>

<P><STRONG><a name="[fe]"></a>LCD5110_LIGHT</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd5110.o(i.LCD5110_LIGHT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD5110_LIGHT
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_light_on
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_light_off
</UL>

<P><STRONG><a name="[ff]"></a>LCD5110_RST</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lcd5110.o(i.LCD5110_RST))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD5110_RST
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_init
</UL>

<P><STRONG><a name="[d9]"></a>LCD5110_clear</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcd5110.o(i.LCD5110_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD5110_clear &rArr; LCD5110_LCD_write_byte &rArr; LCD5110_DIN
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_LCD_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WellcomeScreen
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowResult
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetFrequency
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrequencyReceivedCallback
</UL>

<P><STRONG><a name="[100]"></a>LCD5110_init</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, lcd5110.o(i.LCD5110_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LCD5110_init &rArr; LCD5110_GPIO_Config &rArr; GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_RST
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_LCD_write_byte
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_LCD_delay_ms
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_GPIO_Config
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_DIN
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_DC
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_CLK
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_CE
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_light_on
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[102]"></a>LCD5110_light_off</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lcd5110.o(i.LCD5110_light_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD5110_light_off &rArr; LCD5110_LIGHT
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_LIGHT
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetFrequency
</UL>

<P><STRONG><a name="[101]"></a>LCD5110_light_on</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lcd5110.o(i.LCD5110_light_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD5110_light_on &rArr; LCD5110_LIGHT
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_LIGHT
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_init
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetFrequency
</UL>

<P><STRONG><a name="[da]"></a>LCD5110_set_XY</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcd5110.o(i.LCD5110_set_XY))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD5110_set_XY &rArr; LCD5110_LCD_write_byte &rArr; LCD5110_DIN
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_LCD_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WellcomeScreen
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowResult
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetFrequency
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrequencyReceivedCallback
</UL>

<P><STRONG><a name="[103]"></a>LCD5110_write_char</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lcd5110.o(i.LCD5110_write_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD5110_write_char &rArr; LCD5110_LCD_write_byte &rArr; LCD5110_DIN
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_LCD_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_write_string
</UL>

<P><STRONG><a name="[db]"></a>LCD5110_write_string</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lcd5110.o(i.LCD5110_write_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD5110_write_string &rArr; LCD5110_write_char &rArr; LCD5110_LCD_write_byte &rArr; LCD5110_DIN
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_write_char
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WellcomeScreen
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowResult
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetFrequency
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrequencyReceivedCallback
</UL>

<P><STRONG><a name="[104]"></a>LCD_GetFrequency</STRONG> (Thumb, 328 bytes, Stack size 64 bytes, main.o(i.LCD_GetFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = LCD_GetFrequency &rArr; ADF4350_SetFrequency &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_WriteState
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_write_string
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_set_XY
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_light_on
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_light_off
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_clear
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC05_setConnectedCallback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinRead
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_SetBtn2Flag
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_SetBtn1Flag
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_SetBtn0Flag
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_SetFrequency
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowResult
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10a]"></a>LCD_ShowResult</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, main.o(i.LCD_ShowResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = LCD_ShowResult &rArr; ADC_readMag &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_write_string
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_set_XY
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_clear
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readPhs
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_readMag
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetFrequency
</UL>

<P><STRONG><a name="[10b]"></a>LCD_WellcomeScreen</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, main.o(i.LCD_WellcomeScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_WellcomeScreen &rArr; LCD5110_write_string &rArr; LCD5110_write_char &rArr; LCD5110_LCD_write_byte &rArr; LCD5110_DIN
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_write_string
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_set_XY
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10c]"></a>Led_Init</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, led.o(i.Led_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Led_Init &rArr; GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralReady
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_WriteState
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[d8]"></a>Led_WriteState</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, led.o(i.Led_WriteState))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Led_WriteState
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneConnectedCallback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetFrequency
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrequencyReceivedCallback
</UL>

<P><STRONG><a name="[82]"></a>PhoneConnectedCallback</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(i.PhoneConnectedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PhoneConnectedCallback &rArr; Led_WriteState
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_WriteState
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC05_setFrequencyReceivedCallback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC05_setConnectedCallback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC05_sendHello
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.LCD_GetFrequency)
</UL>
<P><STRONG><a name="[c1]"></a>SoftwareSPI_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, softwarespi.o(i.SoftwareSPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SoftwareSPI_Init &rArr; GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralReady
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_Init
</UL>

<P><STRONG><a name="[10e]"></a>SoftwareSPI_SendData</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, softwarespi.o(i.SoftwareSPI_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SoftwareSPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ADF4350_WriteRegister32
</UL>

<P><STRONG><a name="[111]"></a>SysCtlClockFreqSet</STRONG> (Thumb, 700 bytes, Stack size 24 bytes, sysctl.o(i.SysCtlClockFreqSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysCtlClockFreqSet
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[b4]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareSPI_Init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_GPIO_Config
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_Init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConsole
</UL>

<P><STRONG><a name="[b5]"></a>SysCtlPeripheralReady</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralReady))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareSPI_Init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_GPIO_Config
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_Init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[12e]"></a>SysTickEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickEnable))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_Init
</UL>

<P><STRONG><a name="[12d]"></a>SysTickIntEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, systick.o(i.SysTickIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_Init
</UL>

<P><STRONG><a name="[86]"></a>SysTickIntHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, delay.o(i.SysTickIntHandler))
<BR>[Address Reference Count : 1]<UL><LI> delay.o(i.delay_Init)
</UL>
<P><STRONG><a name="[10f]"></a>SysTickIntRegister</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, systick.o(i.SysTickIntRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTickIntRegister &rArr; IntRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_Init
</UL>

<P><STRONG><a name="[12c]"></a>SysTickPeriodSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(i.SysTickPeriodSet))
<BR><BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_Init
</UL>

<P><STRONG><a name="[78]"></a>SystemInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, system_tm4c129.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_tm4c129.o(.text)
</UL>
<P><STRONG><a name="[110]"></a>System_Init</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, main.o(i.System_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = System_Init &rArr; HC05_Init &rArr; UART_Init &rArr; GPIOPinTypeUART &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralReady
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlClockFreqSet
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Init
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC05_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOInput
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_Init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConsole
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[113]"></a>UARTCharGet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharGet))
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Handler
</UL>

<P><STRONG><a name="[114]"></a>UARTCharPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(i.UARTCharPut))
<BR><BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
</UL>

<P><STRONG><a name="[115]"></a>UARTConfigSetExpClk</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, uart.o(i.UARTConfigSetExpClk))
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[11a]"></a>UARTFIFODisable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.UARTFIFODisable))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[119]"></a>UARTIntClear</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(i.UARTIntClear))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Handler
</UL>

<P><STRONG><a name="[11b]"></a>UARTIntDisable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.UARTIntDisable))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[11d]"></a>UARTIntEnable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart.o(i.UARTIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[116]"></a>UARTIntRegister</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, uart.o(i.UARTIntRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTIntRegister &rArr; IntRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntRegister
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[117]"></a>UARTIntStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.UARTIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Handler
</UL>

<P><STRONG><a name="[ea]"></a>UARTStdioConfig</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, uartstdio.o(i.UARTStdioConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTStdioConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitConsole
</UL>

<P><STRONG><a name="[84]"></a>UART_Handler</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, uart_driver.o(i.UART_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntStatus
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntClear
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharGet
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart_driver.o(i.UART_Init)
</UL>
<P><STRONG><a name="[e5]"></a>UART_Init</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, uart_driver.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = UART_Init &rArr; GPIOPinTypeUART &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntRegister
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntEnable
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntDisable
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTIntClear
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTFIFODisable
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTConfigSetExpClk
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntPrioritySet
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralReady
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeUART
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC05_Init
</UL>

<P><STRONG><a name="[81]"></a>UART_Received_CallBack</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, hc05_driver.o(i.UART_Received_CallBack))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = UART_Received_CallBack &rArr; JSONObject_Getdouble &rArr; __hardfp_atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSONObject_Parse
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSONObject_Getdouble
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSONObject_GetString
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSONObject_CreateObject
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hc05_driver.o(i.HC05_Init)
</UL>
<P><STRONG><a name="[11f]"></a>UART_Send</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, uart_driver.o(i.UART_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendStr
</UL>

<P><STRONG><a name="[e6]"></a>UART_SendStr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uart_driver.o(i.UART_SendStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_SendStr &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC05_sendHello
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC05_sendData
</UL>

<P><STRONG><a name="[120]"></a>UARTprintf</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, uartstdio.o(i.UARTprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = UARTprintf &rArr; UARTvprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTvprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[121]"></a>UARTvprintf</STRONG> (Thumb, 574 bytes, Stack size 64 bytes, uartstdio.o(i.UARTvprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UARTvprintf &rArr; UARTwrite
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>

<P><STRONG><a name="[122]"></a>UARTwrite</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, uartstdio.o(i.UARTwrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UARTwrite
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTvprintf
</UL>

<P><STRONG><a name="[123]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[14c]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[dc]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSONObject_GetString
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC05_sendData
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowResult
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrequencyReceivedCallback
</UL>

<P><STRONG><a name="[14d]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[14e]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[ce]"></a>__ADF4350_SetADF</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, adf4350.o(i.__ADF4350_SetADF))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __ADF4350_SetADF &rArr; __ADF4350_WriteRegister32 &rArr; SoftwareSPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ADF4350_WriteRegister32
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_SetFrequency
</UL>

<P><STRONG><a name="[cf]"></a>__ADF4350_WriteRegister32</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, adf4350.o(i.__ADF4350_WriteRegister32))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __ADF4350_WriteRegister32 &rArr; SoftwareSPI_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareSPI_SendData
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ADF4350_SetADF
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_reset
</UL>

<P><STRONG><a name="[cd]"></a>__ADF4350_bitClear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, adf4350.o(i.__ADF4350_bitClear))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_SetFrequency
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ADF4350_bitWrite
</UL>

<P><STRONG><a name="[cc]"></a>__ADF4350_bitSet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, adf4350.o(i.__ADF4350_bitSet))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_SetFrequency
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ADF4350_bitWrite
</UL>

<P><STRONG><a name="[c8]"></a>__ADF4350_bitWrite</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, adf4350.o(i.__ADF4350_bitWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ADF4350_bitWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ADF4350_bitSet
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ADF4350_bitClear
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_SetFrequency
</UL>

<P><STRONG><a name="[f3]"></a>__hardfp_atof</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, atof.o(i.__hardfp_atof))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = __hardfp_atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSONObject_Getdouble
</UL>

<P><STRONG><a name="[cb]"></a>__hardfp_floor</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, floor.o(i.__hardfp_floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_SetFrequency
</UL>

<P><STRONG><a name="[f1]"></a>__jsoneq</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, jsonobject.o(i.__jsoneq))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __jsoneq &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSONObject_GetString
</UL>

<P><STRONG><a name="[125]"></a>__read_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__read_errno))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>

<P><STRONG><a name="[14f]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[150]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[151]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[126]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>

<P><STRONG><a name="[b2]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scanf_fp.o(i._is_digit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[7e]"></a>btn0UpdateFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, button_control.o(i.btn0UpdateFlag))
<BR>[Address Reference Count : 1]<UL><LI> button_control.o(i.Button_SetBtn0Flag)
</UL>
<P><STRONG><a name="[7f]"></a>btn1UpdateFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, button_control.o(i.btn1UpdateFlag))
<BR>[Address Reference Count : 1]<UL><LI> button_control.o(i.Button_SetBtn1Flag)
</UL>
<P><STRONG><a name="[80]"></a>btn2UpdateFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, button_control.o(i.btn2UpdateFlag))
<BR>[Address Reference Count : 1]<UL><LI> button_control.o(i.Button_SetBtn2Flag)
</UL>
<P><STRONG><a name="[112]"></a>delay_Init</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, delay.o(i.delay_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = delay_Init &rArr; SysTickIntRegister &rArr; IntRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickPeriodSet
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntRegister
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickIntEnable
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickEnable
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
</UL>

<P><STRONG><a name="[c5]"></a>delay_ms</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, delay.o(i.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareSPI_SendData
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD5110_LCD_delay_ms
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADF4350_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WellcomeScreen
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ShowResult
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetFrequency
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrequencyReceivedCallback
</UL>

<P><STRONG><a name="[ef]"></a>jsmn_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, jsmn.o(i.jsmn_init))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSONObject_CreateObject
</UL>

<P><STRONG><a name="[f6]"></a>jsmn_parse</STRONG> (Thumb, 606 bytes, Stack size 64 bytes, jsmn.o(i.jsmn_parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = jsmn_parse &rArr; jsmn_parse_string &rArr; jsmn_alloc_token
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jsmn_parse_string
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jsmn_parse_primitive
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jsmn_alloc_token
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSONObject_Parse
</UL>

<P><STRONG><a name="[77]"></a>main</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = main &rArr; LCD_GetFrequency &rArr; ADF4350_SetFrequency &rArr; __hardfp_floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HC05_sendHello
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WellcomeScreen
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetFrequency
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[ee]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSONObject_GetString
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JSONObject_CreateObject
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[12f]"></a>jsmn_alloc_token</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, jsmn.o(i.jsmn_alloc_token))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = jsmn_alloc_token
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jsmn_parse
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jsmn_parse_string
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jsmn_parse_primitive
</UL>

<P><STRONG><a name="[132]"></a>jsmn_fill_token</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, jsmn.o(i.jsmn_fill_token))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jsmn_fill_token
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jsmn_parse_string
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jsmn_parse_primitive
</UL>

<P><STRONG><a name="[131]"></a>jsmn_parse_primitive</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, jsmn.o(i.jsmn_parse_primitive))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = jsmn_parse_primitive &rArr; jsmn_alloc_token
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jsmn_fill_token
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jsmn_alloc_token
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jsmn_parse
</UL>

<P><STRONG><a name="[130]"></a>jsmn_parse_string</STRONG> (Thumb, 316 bytes, Stack size 40 bytes, jsmn.o(i.jsmn_parse_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = jsmn_parse_string &rArr; jsmn_alloc_token
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jsmn_fill_token
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jsmn_alloc_token
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jsmn_parse
</UL>

<P><STRONG><a name="[de]"></a>_GPIOIntNumberGet</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, gpio.o(i._GPIOIntNumberGet))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntRegister
</UL>

<P><STRONG><a name="[128]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[124]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[12a]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[129]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[85]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL>
<P><STRONG><a name="[a9]"></a>_local_sscanf</STRONG> (Thumb, 54 bytes, Stack size 56 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
</UL>

<P><STRONG><a name="[af]"></a>_fp_value</STRONG> (Thumb, 296 bytes, Stack size 64 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
